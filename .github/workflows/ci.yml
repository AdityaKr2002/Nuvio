name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run TypeScript check
      run: npx tsc --noEmit
      
    - name: Run ESLint (if available)
      run: |
        if [ -f ".eslintrc.js" ] || [ -f ".eslintrc.json" ] || [ -f "eslint.config.js" ]; then
          npx eslint . --ext .ts,.tsx,.js,.jsx
        else
          echo "No ESLint config found, skipping linting"
        fi
      continue-on-error: true
      
    - name: Check for common issues
      run: |
        echo "Checking for common React Native issues..."
        
        # Check for console.log statements in production code
        if grep -r "console\.log" src/ --include="*.ts" --include="*.tsx" | grep -v "// console.log" | head -5; then
          echo "‚ö†Ô∏è  Found console.log statements in source code"
        else
          echo "‚úÖ No console.log statements found"
        fi
        
        # Check for TODO comments
        if grep -r "TODO\|FIXME\|HACK" src/ --include="*.ts" --include="*.tsx" | head -5; then
          echo "‚ö†Ô∏è  Found TODO/FIXME/HACK comments"
        else
          echo "‚úÖ No TODO comments found"
        fi
        
        # Check package.json for required fields
        if [ -f "package.json" ]; then
          echo "‚úÖ package.json exists"
          if grep -q '"name"' package.json; then
            echo "‚úÖ Package name defined"
          else
            echo "‚ùå Package name missing"
            exit 1
          fi
        else
          echo "‚ùå package.json missing"
          exit 1
        fi
        
    - name: Verify React Native setup
      run: |
        echo "Verifying React Native setup..."
        
        # Check if React Native is properly installed
        if npm list react-native > /dev/null 2>&1; then
          echo "‚úÖ React Native is installed"
        else
          echo "‚ùå React Native not found"
          exit 1
        fi
        
        # Check if Expo is properly installed
        if npm list expo > /dev/null 2>&1; then
          echo "‚úÖ Expo is installed"
        else
          echo "‚ùå Expo not found"
          exit 1
        fi
        
        # Check for required config files
        if [ -f "app.json" ]; then
          echo "‚úÖ app.json exists"
        else
          echo "‚ùå app.json missing"
          exit 1
        fi
        
        if [ -f "babel.config.js" ]; then
          echo "‚úÖ babel.config.js exists"
        else
          echo "‚ùå babel.config.js missing"
          exit 1
        fi
        
        if [ -f "metro.config.js" ]; then
          echo "‚úÖ metro.config.js exists"
        else
          echo "‚ùå metro.config.js missing"
          exit 1
        fi
        
    - name: Test Metro bundler
      run: |
        echo "Testing Metro bundler..."
        npx expo export --platform web --output-dir ./dist-test
        if [ -d "./dist-test" ]; then
          echo "‚úÖ Metro bundler test successful"
          rm -rf ./dist-test
        else
          echo "‚ùå Metro bundler test failed"
          exit 1
        fi
        
    - name: Check Android build files
      run: |
        echo "Checking Android build configuration..."
        if [ -d "android" ]; then
          echo "‚úÖ Android directory exists"
          if [ -f "android/build.gradle" ]; then
            echo "‚úÖ Android build.gradle exists"
          else
            echo "‚ùå Android build.gradle missing"
            exit 1
          fi
          if [ -f "android/app/build.gradle" ]; then
            echo "‚úÖ Android app build.gradle exists"
          else
            echo "‚ùå Android app build.gradle missing"
            exit 1
          fi
        else
          echo "‚ö†Ô∏è  Android directory not found"
        fi
        
    - name: Check iOS build files
      run: |
        echo "Checking iOS build configuration..."
        if [ -d "ios" ]; then
          echo "‚úÖ iOS directory exists"
          if [ -f "ios/Podfile" ]; then
            echo "‚úÖ iOS Podfile exists"
          else
            echo "‚ùå iOS Podfile missing"
            exit 1
          fi
        else
          echo "‚ö†Ô∏è  iOS directory not found"
        fi
        
    - name: Security check
      run: |
        echo "Running security audit..."
        npm audit --audit-level moderate || echo "‚ö†Ô∏è  Security vulnerabilities found (non-blocking)"
        
    - name: Check environment variables
      run: |
        echo "Checking for required environment variables..."
        if [ -f ".env.example" ]; then
          echo "‚úÖ .env.example found"
        else
          echo "‚ö†Ô∏è  .env.example not found"
        fi
        
        # Check for hardcoded secrets (basic check)
        if grep -r "password\|secret\|key\|token" src/ --include="*.ts" --include="*.tsx" | grep -v "// " | grep -v "password:" | head -3; then
          echo "‚ö†Ô∏è  Potential hardcoded secrets found"
        else
          echo "‚úÖ No obvious hardcoded secrets found"
        fi
        
    - name: Build summary
      run: |
        echo "üéâ Build Summary:"
        echo "‚úÖ Dependencies installed"
        echo "‚úÖ TypeScript compilation check passed"
        echo "‚úÖ React Native setup verified"
        echo "‚úÖ Metro bundler test passed"
        echo "‚úÖ Build configuration verified"
        echo ""
        echo "üìä Project Stats:"
        echo "- TypeScript files: $(find src -name '*.ts' -o -name '*.tsx' | wc -l)"
        echo "- Total source lines: $(find src -name '*.ts' -o -name '*.tsx' -exec wc -l {} + | tail -1 | awk '{print $1}')"
        echo "- Dependencies: $(npm list --depth=0 | wc -l)"
